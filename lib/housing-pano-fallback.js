/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	// Generated by CoffeeScript 1.9.3
	(function() {
	  var container, div, flag, g, image, img1, img2, keypress, pano, root;

	  root = __webpack_require__(1);

	  flag = false;

	  image = 1;

	  keypress = 1;

	  (function($) {
	    $.fn.dragabble = function(opt) {
	      var $el;
	      var $el, set_x;
	      opt = $.extend({
	        handle: '',
	        cursor: 'move'
	      }, opt);
	      if (opt.handle === '') {
	        $el = this;
	      } else {
	        $el = this.find(opt.handle);
	      }
	      set_x = void 0;
	      return $el.css('cursor', opt.cursor).on('mousedown', function(e) {
	        var $drag;
	        flag = true;
	        $drag = $el;
	        set_x = e.pageX;
	        e.preventDefault();
	      }).on('mousemove', function(e) {

	        /*
	        			if flag == true
	        				g = $(this).offset().left + (e.pageX - set_x) * 0.05
	        				if e.pageX > set_x
	        					if keypress == 2
	        						image = image % 2 + 1
	        				else
	        					if keypress == 1
	        						image = image % 2 + 1
	        				$(this).offset left: g
	        				p = Math.floor($('#drag').offset().left)
	        				if keypress == 1
	        					if Math.abs(p) % 1500 == 0
	        						if image == 1
	        							image = 2
	        							q = $('#screen1').offset().left - p
	        							$('#screen2').offset left: q - 1500 + p
	        						else
	        							image = 1
	        							q = $('#screen2').offset().left - p
	        							$('#screen1').offset left: q - 1500 + p
	        				else
	        					p = p + 220
	        					if Math.abs(p) % 1500 == 0
	        						if image == 1
	        							image = 2
	        							q = $('#screen1').offset().left - p
	        							$('#screen2').offset left: q - 1500 + p
	        						else
	        							image = 1
	        							q = $('#screen2').offset().left - p
	        							$('#screen1').offset left: q - 1500 + p
	         */
	      }).on('mouseup', function() {
	        flag = false;
	      }).on('keydown', function(e) {
	        var keypressed, p, q;
	        keypressed = e.keyCode;
	        p = $(this).offset().left;
	        if (keypressed === 37) {
	          if (keypress === 1) {
	            image = image % 2 + 1;
	          }
	          keypress = 2;
	          $(this).offset({
	            left: p - 10
	          });
	          p = $(this).offset().left;
	          p = p + 220;
	          if (Math.abs(p) % 1500 === 0) {
	            if (image === 1) {
	              image = 2;
	              p = p - 220;
	              q = $('#screen1').offset().left - p;
	              $('#screen2').offset({
	                left: q + 1500 + p
	              });
	            } else {
	              image = 1;
	              p = p - 220;
	              q = $('#screen2').offset().left - p;
	              $('#screen1').offset({
	                left: q + 1500 + p
	              });
	            }
	          }
	        } else if (keypressed === 39) {
	          if (keypress === 2) {
	            image = image % 2 + 1;
	          }
	          keypress = 1;
	          $(this).offset({
	            left: p + 10
	          });
	          if (Math.abs(p) % 1500 === 0) {
	            if (image === 1) {
	              image = 2;
	              q = $('#screen1').offset().left - p;
	              $('#screen2').offset({
	                left: q - 1500 + p
	              });
	            } else {
	              image = 1;
	              q = $('#screen2').offset().left - p;
	              $('#screen1').offset({
	                left: q - 1500 + p
	              });
	            }
	          }
	        }
	      }).on('click', function(e) {
	        $(this).focus();
	      });
	    };
	  })(jQuery);

	  container = $("#" + DirectPano.pano_div_id);

	  container.css("overflow", "hidden");

	  div = $("<div></div>", {
	    id: "drag",
	    tabindex: 0
	  });

	  div.width(window.innerWidth).height(window.innerHeight);

	  img1 = $('<img id="screen1" />');

	  img2 = $('<img id="screen2" />');

	  img1.css({
	    "width": "1500px",
	    "height": "620px"
	  });

	  img2.css({
	    "width": "1500px",
	    "height": "620px"
	  });

	  div.append(img1);

	  div.append(img2);

	  container.append(div);

	  pano = new root.Pano();

	  pano.load_pano(0);

	  img2.offset({
	    top: 0,
	    left: -1500
	  });

	  console.log($("#screen2"));

	  g = div.dragabble();

	}).call(this);


/***/ },
/* 1 */
/***/ function(module, exports) {

	// Generated by CoffeeScript 1.9.3
	(function() {
	  var Pano, root;

	  root = {};

	  Pano = (function() {
	    function Pano() {
	      this.pano_id = void 0;
	    }

	    Pano.prototype.load_pano = function(pano_id) {
	      var img1, img2, path;
	      this.pano_id = pano_id;
	      img1 = $("#screen1");
	      img2 = $("#screen2");
	      path = "../test/images/try.jpg";
	      img1.attr("src", path);
	      return img2.attr("src", path);
	    };

	    return Pano;

	  })();

	  root.Pano = Pano;

	  module.exports = root;

	}).call(this);


/***/ }
/******/ ]);